name: "publish"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-22.04"
            args: ""
            target: "x86_64-unknown-linux-gnu"
            ext: ""
          - platform: "windows-latest"
            args: ""
            target: "x86_64-pc-windows-msvc"
            ext: ".exe"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build release binaries
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release directory
        run: mkdir -p release

      - name: Copy binaries (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          cp target/${{ matrix.target }}/release/kyra-agent release/kyra-agent-linux-x64
          cp target/${{ matrix.target }}/release/kyra-daemon release/kyra-daemon-linux-x64

      - name: Copy binaries (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/kyra-agent.exe release/kyra-agent-windows-x64.exe
          cp target/${{ matrix.target }}/release/kyra-daemon.exe release/kyra-daemon-windows-x64.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kyra-${{ matrix.platform }}
          path: release/*

  create-release:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release directory
        run: mkdir -p release

      - name: Collect all binaries
        run: |
          find artifacts -type f -exec cp {} release/ \;
          ls -la release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
